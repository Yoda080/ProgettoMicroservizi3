

services:
  # ----------------------------------------
  # 1. SERVIZIO DATABASE MS SQL SERVER
  # ----------------------------------------
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql_db
    restart: always
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: LaTuaPasswordComplessa123!
    ports:
      - "1433:1433"
    
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "LaTuaPasswordComplessa123!", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s 

  # ----------------------------------------
  # 2. MICROSERVIZIO USER (.NET) - Porta 5001
  # ----------------------------------------
  users:
    build: 
      context: .
      dockerfile: ./UserService/Dockerfile
    container_name: user_service
    restart: always
    ports:
      - "5001:5001"
    environment:
      ConnectionStrings__DefaultConnection: "Server=mssql;Database=users_db;User Id=sa;Password=LaTuaPasswordComplessa123!;TrustServerCertificate=true;"
      ASPNETCORE_URLS: http://+:5001
      JwtSettings__SecretKey: "LaTuaChiaveSegretaSuperSicuraAlmeno32Caratteri"
      JwtSettings__Issuer: "UserService"
      JwtSettings__Audience: "MovieRentalApp"
    depends_on:
      mssql:
        condition: service_healthy

  # ----------------------------------------
  # 3. MICROSERVIZIO MOVIE CATALOG (.NET) - Porta 5002
  # ----------------------------------------
  moviecatalog:
    build: 
      context: .
      dockerfile: ./MovieCatalogService/Dockerfile 
    container_name: movie_catalog_service
    restart: always
    ports:
      - "5002:5002"
    environment:
      ConnectionStrings__DefaultConnection: "Server=mssql;Database=movies_db;User Id=sa;Password=LaTuaPasswordComplessa123!;TrustServerCertificate=true;"
      ASPNETCORE_URLS: http://+:5002
      Services__UserService: "http://users:5001"
      Services__RentalService: "http://rentals:5003"
      JwtSettings__SecretKey: "LaTuaChiaveSegretaSuperSicuraAlmeno32Caratteri"
      JwtSettings__Issuer: "UserService"
      JwtSettings__Audience: "MovieRentalApp"
    depends_on:
      mssql:
        condition: service_healthy
      users:
        condition: service_started

  # ----------------------------------------
  # 4. MICROSERVIZIO RENTALS (.NET) - Porta 5003
  # ----------------------------------------
  rentals:
    build: 
      context: .
      dockerfile: ./Rentals/Dockerfile
    container_name: rentals_service
    restart: always
    ports:
      - "5003:5003"
    environment:
      ConnectionStrings__DefaultConnection: "Server=mssql;Database=rentals_db;User Id=sa;Password=LaTuaPasswordComplessa123!;TrustServerCertificate=true;"
      ASPNETCORE_URLS: http://+:5003
      Services__UserService: "http://users:5001"
      Services__MovieService: "http://moviecatalog:5002"
      JwtSettings__SecretKey: "LaTuaChiaveSegretaSuperSicuraAlmeno32Caratteri"
      JwtSettings__Issuer: "UserService"
      JwtSettings__Audience: "MovieRentalApp"
    depends_on:
      mssql:
        condition: service_healthy
      users:
        condition: service_started
      moviecatalog:
        condition: service_started

  # ----------------------------------------
  # 5. MICROSERVIZIO SHOPPING CART (.NET) - Porta 5005 (NUOVA PORTA)
  # ----------------------------------------
  shoppingcart:
    build: 
      context: .
      dockerfile: ./ShoppingCartService/Dockerfile 
    container_name: shopping_cart_service
    restart: always
    ports:
      - "5005:5005" 
    environment:
      # Il carrello usa lo stesso DB di Rentals per le sue migrazioni
      ConnectionStrings__DefaultConnection: "Server=mssql;Database=rentals_db;User Id=sa;Password=LaTuaPasswordComplessa123!;TrustServerCertificate=true;"
      ASPNETCORE_URLS: http://+:5005
      Services__UserService: "http://users:5001"
      Services__MovieService: "http://moviecatalog:5002"
      JwtSettings__SecretKey: "LaTuaChiaveSegretaSuperSicuraAlmeno32Caratteri"
      JwtSettings__Issuer: "UserService"
      JwtSettings__Audience: "MovieRentalApp"
    depends_on:
      mssql:
        condition: service_healthy
      users:
        condition: service_started
      moviecatalog:
        condition: service_started
        
  # ----------------------------------------
  # 6. MICROSERVIZIO BANK/PAYMENTS (.NET) - Porta 5004 (VECCHIA PORTA)
  # ----------------------------------------
  bank:
    build: 
      context: .
      dockerfile: ./BankService/Dockerfile
    container_name: bank_service
    restart: always
    ports:
      - "5004:5004"
    environment: 
      ConnectionStrings__DefaultConnection: "Server=mssql;Database=payments_db;User Id=sa;Password=LaTuaPasswordComplessa123!;TrustServerCertificate=true;"
      ASPNETCORE_URLS: http://+:5004
      JwtSettings__SecretKey: "LaTuaChiaveSegretaSuperSicuraAlmeno32Caratteri"
      JwtSettings__Issuer: "UserService"
      JwtSettings__Audience: "MovieRentalApp"
    depends_on:
      mssql:
        condition: service_healthy
      users:
        condition: service_started

  # ----------------------------------------
  # 7. FRONTEND REACT (Nginx)
  # ----------------------------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_react
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - users
      - rentals
      - moviecatalog
      - shoppingcart
      - bank

# âœ… SEZIONE VOLUMES A LIVELLO ROOT (Corretto da 'voling')
volumes:
  mssql-data: {}
